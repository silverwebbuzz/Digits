import { Injectable } from '@nestjs/common';
import { Model } from 'mongoose';
import { InjectModel } from '@nestjs/mongoose';
import { User } from 'src/Management/interfaces/user.interface';
import { AdminManagementDTO } from 'src/Management/adminManagement/adminManagement.dto';

@Injectable()
export class AdminManagementService {
  constructor(@InjectModel('User') private readonly userModel: Model<User>) {}
  // fetch all users
  async getAllAdminUser(): Promise<User[]> {
    const users = await this.userModel
    .find(
      {
        $or: [{ user_type: '1' }, { user_type: '2' }, { user_type: '3' }],
      },
      { PIC_phone: 0, PIC_fullname: 0 },
    )
      .exec();
    return users;
  }
  // Get a single user
  async getUser(userID): Promise<User> {
    const user = await this.userModel.findById(userID, { PIC_phone: 0, PIC_fullname: 0 }).exec();
    return user;
  }
  // post a single User
  async addUser(AdminManagementDTO: AdminManagementDTO): Promise<User> {
    const newUser = await new this.userModel(AdminManagementDTO);
    return await newUser.save();
  }
  // Edit User details
  async updateUser(
    userID,
    AdminManagementDTO: AdminManagementDTO,
  ): Promise<User> {
    const updatedUser = await this.userModel.findByIdAndUpdate(
      userID,
      AdminManagementDTO,
      { new: true },
    );
    return updatedUser.save();
  }
  async editUser(
    userID,
    AdminManagementDTO: AdminManagementDTO,
  ): Promise<User> {
    const editUser = await this.userModel.findByIdAndUpdate(
      userID,
      AdminManagementDTO,
      { new: true },
    );
    return editUser;
  }
  // Delete a User
  async deleteUser(userID): Promise<any> {
    const deletedUser = await this.userModel.findOneAndDelete(userID);
    return deletedUser;
  }
}
